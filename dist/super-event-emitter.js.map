{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 99933f2452ad500ccfb6","webpack:///./index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA","file":"super-event-emitter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EventEmitter\"] = factory();\n\telse\n\t\troot[\"EventEmitter\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 99933f2452ad500ccfb6\n **/","/**\n * @author Piotr Kowalski\n * @license The MIT License\n * @example\n * EventEmitter.mixin(bar);\n * bar.on('foo', function () {\n *     console.log('foo event emitted');\n * });\n * bar.emit('foo');\n */\n'use strict';\n\n// Helpers.\n\nfunction toString(arg) {\n    return Object.prototype.toString.call(arg);\n}\n\nfunction assert(cond, msg) {\n    if (!cond) throw new Error(msg || 'Assertion Error');\n}\n\nfunction forEach(list, iterator, context) {\n    context = context || {};\n    list = list || [];\n    Array.prototype.forEach.call(list, iterator.bind(context));\n}\n\nfunction isString(arg) {\n    return typeof arg === 'string';\n}\n\nfunction isFunction(arg) {\n    return typeof arg === 'function';\n}\n\nfunction isArray(arg) {\n    return toString(arg) === '[object Array]';\n}\n\n// Main part.\n\n/**\n * @typedef {Object} EventEmitter\n * @description Super small and simple interpretation of popular event management.\n */\nvar EventEmitter = {\n    /**\n     * Register listener on concrete name with specified handler.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     * @param {Object} [ctx]\n     */\n    on: function (name, fn, ctx) {\n        assert(isString(name), 'EventEmitter#on: `name` is not a string');\n        assert(isFunction(fn), 'EventEmitter#on: `fn` is not a function');\n\n        if (!isArray(this._listeners)) {\n            this._listeners = [];\n        }\n\n        // Push to private lists of listeners.\n        this._listeners.push({\n            name: name,\n            fn: fn,\n            // If the context is not passed, use `this`.\n            ctx: ctx || this\n        });\n    },\n\n    /**\n     * Register listener.\n     * Remove them after once event triggered.\n     *\n     * @param {string} name\n     * @param {Function} fn\n     * @param {Object} [ctx]\n     */\n    once: function (name, fn, ctx) {\n        ctx = ctx || this;\n\n        var self = this;\n        var handle = function () {\n            fn.apply(ctx, arguments);\n            self.off(name, handle);\n        };\n\n        this.on(name, handle, ctx);\n    },\n\n    /**\n     * Unregister listener.\n     * Remove concrete listener by name and itself definition.\n     *\n     * @param {string} [name]\n     * @param {Function} [fn]\n     */\n    off: function (name, fn) {\n        if (!isArray(this._listeners)) {\n            this._listeners = [];\n        }\n\n        forEach(this._listeners, function (listener, index) {\n            if (name) {\n                if (listener.name === name) {\n                    if (isFunction(fn)) {\n                        if (listener.fn === fn) {\n                            this._listeners.splice(index, 1);\n                        }\n                    } else {\n                        this._listeners.splice(index, 1);\n                    }\n                }\n            } else {\n                this._listeners.splice(index, 1);\n            }\n        }, this);\n    },\n\n    /**\n     * Trigger event.\n     * All of listeners waiting for emit event will be executed.\n     *\n     * @param {string} name\n     * @param {Object} [params]\n     */\n    emit: function (name, params) {\n        assert(isString(name), 'EventEmitter#emit: `name` is not a string');\n\n        if (!isArray(this._listeners)) {\n            this._listeners = [];\n        }\n\n        forEach(this._listeners, function (event) {\n            if (event.name === name) {\n                event.fn.call(event.ctx, params);\n            }\n\n            if (event.name === 'all') {\n                event.fn.call(event.ctx, name, params);\n            }\n        });\n    },\n\n    /**\n     * Mixin properties.\n     * Best way to setup EventEmitter on any object.\n     *\n     * @param {Object} target\n     */\n    mixin: function (target) {\n        for (var key in this) {\n            if (this.hasOwnProperty(key)) {\n                target[key] = this[key];\n            }\n        }\n\n        return target;\n    }\n};\n\n\n// Aliases.\n\nEventEmitter.addEventListener = EventEmitter.addListener = EventEmitter.bind = EventEmitter.on;\nEventEmitter.removeEventListener = EventEmitter.removeListener = EventEmitter.unbind = EventEmitter.off;\nEventEmitter.trigger = EventEmitter.emit;\n\n\n// Export `EventEmitter`.\nmodule.exports = EventEmitter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0 1\n **/"],"sourceRoot":""}